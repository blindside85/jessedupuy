---
import BaseLayout from "../../layouts/BaseLayout.astro";
import BlogPost from "../../components/BlogPost.astro";

interface Post {
    url: string;
    frontmatter: {
        title: string;
        tags?: string[];
    };
}

export async function getStaticPaths() {
    const allPosts: Post[] = await Astro.glob("../posts/*.md");
    const uniqueTags = [
        ...new Set(allPosts.flatMap((post) => post.frontmatter.tags)),
    ];

    return uniqueTags.map((tag) => {
        const filteredPosts = allPosts.filter((post) => {
            if (typeof tag === "string") {
                return post.frontmatter.tags?.includes(tag);
            }
            return false;
        });
        return {
            params: { tag },
            props: { posts: filteredPosts },
        };
    });
}

const { tag }: { tag: string } = Astro.params;
const { posts }: { posts: Post[] } = Astro.props;
const title = "blog tag: " + tag;
---

<BaseLayout title={title}>
    <p>Posts about <em>{tag}</em>:</p>
    <ul>
        {
            posts.map((post: Post) => (
                <BlogPost url={post.url} title={post.frontmatter.title} />
            ))
        }
    </ul>
</BaseLayout>
